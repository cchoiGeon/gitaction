name: Node.js Dev CI/CD

on:
  pull_request:      # pull request -> merge 가 되었을 때 돌아라
    types: [ closed ]
  workflow_dispatch: # 수동 실행도 가능하도록 함

jobs:
  build:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'dev'
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['18.x']
        
    steps:
      - name: Checkout
        uses: actions/checkout@v3   # build 할 코드를 가져옴 (코드 check out)

      # Initialize Node.js
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # Install project dependencies, test and build
      - name: Install dependencies
        run: npm install   # dependencies 설치

      - name: Run Build
        run: |
          npm run build:elb # 빌드
          npm run build:cfg

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*' './node_modules/*' '*lock*' './dist/*'
          # cp -R .ebextensions-dev .platform config public src deploy
          # cp babel.config.json package.json Procfile deploy
          # cd deploy &* zip -r deploy.zip
          
          # zip -r deploy.zip . -x '*.git*' './node_modules/*' '*lock*' './dist/*'

      - name: Get Zip Inside
        run: zipinfo -1 deploy.zip

      # Get Current Time
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # build 시점의 시간

      - name: Show Current Time
        run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
        shell: bash # (10) 시간 보여주기
      
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{secrets.AWS_ACTION_ACCESS_KEY_ID}}
          aws_secret_key: ${{secrets.AWS_ACTION_SECRET_ACCESS_KEY}}
          application_name: test8-dev
          environment_name: Test8-dev-env
          version_label: github-action-2023-12-10T02-30-58
          use_existing_version_if_available: true
          region: ap-northeast-2
          deployment_package: deploy.zip
          wait_for_environment_recovery: 180 

      - name: Deployed!
        run: echo App deployed to ELB