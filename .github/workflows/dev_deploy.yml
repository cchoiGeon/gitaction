name: Node.js Dev CI/CD

on:
  pull_request:      # pull request -> merge 가 되었을 때 돌아라
    types: [ closed ]
  workflow_dispatch: # 수동 실행도 가능하도록 함

jobs:
  build:
    # if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'dev'
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['18.x']
        
    steps:
    - name: Checkout
      uses: actions/checkout@v3   # build 할 코드를 가져옴 (코드 check out)

    # Initialize Node.js
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Install project dependencies, test and build
    - name: Install dependencies
      run: npm ci   # dependencies 설치

    - name: Run Build
      run: npm run build # 빌드

      # Install AWS CLI 2
    - name: Install AWS CLI 2
      working-directory: ${{ env.working-directory }}
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        which aws
        sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*' './aws/*' './node_modules/*' './dist/*' awscliv2.zip

    # Get Current Time
    - name: Get current time
      uses: 1466587594/get-current-time@v2
      id: current-time
      with:
        format: YYYY-MM-DDTHH-mm-ss
        utcOffset: "+09:00" # build 시점의 시간

    - name: Show Current Time
      run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}"
      shell: bash # (10) 시간 보여주기
    
    - name: Beanstalk Deploy
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{secrets.AWS_ACTION_ACCESS_KEY_ID}}
        aws_secret_key: ${{secrets.AWS_ACTION_SECRET_ACCESS_KEY}}
        application_name: project-dev
        environment_name: Project-dev-env
        version_label: github-action-${{steps.current-time.outputs.formattedTime}}
        region: ap-northeast-2
        deployment_package: deploy.zip
        wait_for_environment_recovery: false

    - name: Deployed!
      run: echo App deployed to ELB